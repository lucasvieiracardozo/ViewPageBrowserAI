{"version":3,"file":"content.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://viewpagebrowserai/./src/content/main.ts"],"sourcesContent":["\"use strict\";\n// src/content/main.ts - VERSÃO FINAL COM \"FOTÓGRAFO PACIENTE\" (MutationObserver)\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    if (request.type === \"GET_PAGE_CONTEXT\") {\n        console.log(\"Content script: Recebi pedido da UI. Aguardando conteúdo dinâmico...\");\n        const extractContent = () => {\n            const mainContentElement = document.querySelector('main') ||\n                document.querySelector('article') ||\n                document.querySelector('[role=\"main\"]') ||\n                // Seletor específico para o grid de resultados do YouTube\n                document.querySelector('ytd-two-column-browse-results-renderer') ||\n                document.body;\n            const bodyClone = mainContentElement.cloneNode(true);\n            bodyClone.querySelectorAll('script, style, svg, noscript, nav, footer, aside, #secondary').forEach(el => el.remove());\n            return {\n                title: document.title,\n                htmlContent: bodyClone.innerHTML,\n                textContent: bodyClone.innerText,\n            };\n        };\n        // Tenta encontrar o container do conteúdo principal do YouTube\n        const contentContainer = document.querySelector('ytd-rich-grid-renderer');\n        // Se o container existir e estiver vazio (esperando conteúdo), nós observamos ele\n        if (contentContainer && contentContainer.children.length === 0) {\n            const observer = new MutationObserver((mutations, obs) => {\n                // Assim que o container for modificado (os vídeos forem adicionados)...\n                if (contentContainer.children.length > 0) {\n                    console.log(\"Conteúdo dinâmico carregado! Extraindo...\");\n                    sendResponse(extractContent());\n                    obs.disconnect(); // Para de observar\n                    return;\n                }\n            });\n            observer.observe(contentContainer, {\n                childList: true,\n                subtree: true,\n            });\n            // Timeout de segurança: se nada acontecer em 5 segundos, extrai o que tiver\n            setTimeout(() => {\n                console.log(\"Timeout do observer. Extraindo o que estiver disponível.\");\n                observer.disconnect();\n                // Verifica se a resposta ainda não foi enviada\n                try {\n                    sendResponse(extractContent());\n                }\n                catch (e) {\n                    // Se a resposta já foi enviada, o catch evita um erro no console.\n                }\n            }, 5000);\n        }\n        else {\n            // Se a página for estática ou o conteúdo já estiver lá, extrai imediatamente\n            console.log(\"Página estática ou conteúdo já presente. Extraindo imediatamente...\");\n            sendResponse(extractContent());\n        }\n        return true; // Mantém a porta aberta para a resposta assíncrona do observer/timeout\n    }\n});\nconsole.log(\"Content script (v5 - Fotógrafo Paciente) ativo.\");\n"],"names":[],"sourceRoot":""}